
					/---------------------------------\
					| GLORIOUS GAMEPLAN FOR MINISHELL |
					\---------------------------------/

Tokenising:
	- splitting on spaces and reserved symbols?
		{' ', '|', '>', '<', '>>', '<<'} NOT '=', ''', '"'
			(don't split ON quotes, and don't split IN quotes)
	- checking what type of WORD a token is?
	- setting flags for parsing

Parser:
	- quote removal (include empty strings ("" and ''))
	- var expansion

Notes:
	if the a special character is the result of an expansion, should we
	mark it as not reserved ? that way the recogniser will exclude them?

TODO:

	must delay opening files until execution! -> DONE
	
	problem: parenthesis behave differently with rediretions. -> WORKS
	
	maybe store the output and input file, along with the fds. -> DON'T NEED TO
	
	when building commands, pass around fds. -> OBSOLETE
	
	need to close file descriptors directly after a single command execution. -> FIXED

	protect against fork fails: either retry or interrupt the execution of the commands -> FIXED ? need to choose a proper exit status

	norm the "execute_simple_command" function.

	norm the "minishell_execution" file.

	heredocs seem to be done before launching processes -> DONE!

	make the operators create heredocs for left and right elements. (if there are redirections)

